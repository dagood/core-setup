parameters:
  DependsOn: {}
  _PublishType: {}
jobs:

- job: Finalize_Publish
  displayName: Finalize_Publish
  # Run after all dependent legs are executed
  dependsOn: ${{ parameters.DependsOn }}
  pool:
    # Use a hosted pool when possible.
    ${{ if eq(variables['System.TeamProject'], 'public') }}:
      name: Hosted VS2017
    ${{ if ne(variables['System.TeamProject'], 'public') }}:
      name: NetCoreInternal-Int-Pool
      queue: buildpool.windows.10.amd64.vs2017
  # Double the default timeout. Publishing is subject to huge delays due to contention on the dotnet-core blob feed
  timeoutInMinutes: 120
  workspace:
    clean: all
  variables:
  - name: _PublishType
    value: ${{ parameters._PublishType}}

  # Blob feed publish
  - name: _PublishBlobFeedUrl
    value: ${{ coalesce(variables._PublishBlobFeedUrl, 'https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json') }}
  - name: _TransportFeedAccessToken
    value: ${{ coalesce(variables.TransportFeedAccessToken, '$(dotnetfeed-storage-access-key-1)') }}
  - name: _BlobFeedArgs
    value: >-
      /p:PackagesUrl=$(_PublishBlobFeedUrl)
      /p:SymbolPackagesUrl=$(_PublishBlobFeedUrl)
      /p:TransportFeedAccessToken=$(TransportFeedAccessToken)

  # Symbol Server update
  - name: _MicrosoftSymbolServerPat
    value: ${{ coalesce(variables.MicrosoftSymbolServerPat, '$(microsoft-symbol-server-pat)') }}
  - name: _SymwebSymbolServerPat
    value: ${{ coalesce(variables.SymwebSymbolServerPat, '$(symweb-symbol-server-pat)') }}
  - name: _SymbolServerArgs
    value: >-
      /p:MicrosoftSymbolServerPat=$(microsoft-symbol-server-pat)
      /p:SymwebSymbolServerPat=$(symweb-symbol-server-pat)

  steps:

  - task: MicroBuildSigningPlugin@2
    displayName: Install MicroBuild plugin for Signing
    inputs:
      signType: $(SignType)
      zipSources: false
      feedSource: https://dnceng.pkgs.visualstudio.com/_packaging/MicroBuildToolset/nuget/v3/index.json
    continueOnError: false
    condition: and(succeeded(), in(variables['SignType'], 'real', 'test'))

  - task: MSBuild@1
    displayName: Publish (no PublishType)
    inputs: 
      solution: $(Build.SourcesDirectory)\publish\publish.proj
      platform: x64
      configuration: Release
      msbuildVersion: 15.0
      msbuildArchitecture: x64
      msbuildArguments: '/p:Finalize=true 
      /p:OfficialPublish=true 
      /p:PublishType=nopublishtype 
      /p:SignType=$(SignType) 
      /p:TargetArchitecture=x64
      $(_BlobFeedArgs) 
      $(_CommonPublishArgs) 
      $(_SymbolServerArgs) 
      /bl:$(Build.SourcesDirectory)\finalizepublish.binlog
      /nr:false'
    condition: and(succeeded(), eq(variables._PublishType, 'nopublishtype'))

  - task: CopyFiles@2
    displayName: Copy Files to $(Build.StagingDirectory)\BuildLogs
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: |
        **/*.log
        **/*.binlog
      TargetFolder: '$(Build.StagingDirectory)\BuildLogs'
    continueOnError: true
    condition: succeededOrFailed()

  - task: CopyFiles@2
    displayName: Copy Manifest file
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/artifacts/log/AssetManifest'
      TargetFolder: '$(Build.StagingDirectory)/AssetManifests'
    continueOnError: true
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact BuildLogs
    inputs:
      PathtoPublish: '$(Build.StagingDirectory)\BuildLogs'
      ArtifactName: Finalize_Publish
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: Push Asset Manifests
    inputs:
      PathtoPublish: '$(Build.StagingDirectory)/AssetManifests'
      PublishLocation: Container
      ArtifactName: AssetManifests
    continueOnError: true
    condition: succeededOrFailed()
