parameters:
  displayName: ''

jobs:
- job: ${{ parameters.displayName }}
  pool:
    ${{ if eq(variables['System.TeamProject'], 'public') }}:
      name: Hosted macOS
    ${{ if ne(variables['System.TeamProject'], 'public') }}:
      name: Hosted Mac internal
  strategy:
    matrix: 
      # debug:
      #   _BuildConfig: Debug
      #   _PublishType: none
      release:
        _BuildConfig: Release
        _PublishType: blob
  workspace:
    clean: all
  variables: 
    CommonMSBuildArgs: >-
      /p:Configuration=$(_BuildConfig)
      /p:PortableBuild=true
  steps:
  - script: >-
      $(Build.SourcesDirectory)/build.sh --ci --test
      /p:OfficialBuildId=$(OfficialBuildId)
      /p:StripSymbols=true
      $(CommonMSBuildArgs)
    displayName: Build 
    condition: succeeded()

  - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
    - task: PublishBuildArtifacts@1
      displayName: Publish Artifacts
      inputs:
        pathToPublish: $(Build.SourcesDirectory)/artifacts/packages/$(_BuildConfig)
        artifactName: Artifacts-${{ parameters.displayName }}
        artifactType: container
      condition: and(succeeded(), eq(variables._BuildConfig, 'Release'))

  - task: PublishTestResults@2
    displayName: Publish Test Results
    inputs:
      testResultsFormat: 'xUnit'
      testResultsFiles: '*.xml'
      searchFolder: '$(Build.SourcesDirectory)/artifacts/TestResults/$(_BuildConfig)'
      mergeTestResults: true
      testRunTitle: ${{ parameters.displayName }}-$(_BuildConfig)
    continueOnError: true
    condition: always()

  - task: CopyFiles@2
    displayName: Copy logs to stage
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: |
        **/*.log
        **/*.binlog
      TargetFolder: '$(Build.StagingDirectory)/BuildLogs'
    continueOnError: true
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact BuildLogs
    inputs:
      PathtoPublish: '$(Build.StagingDirectory)/BuildLogs'
      ArtifactName: Logs-${{ parameters.displayName }}-$(_BuildConfig)
    continueOnError: true
    condition: succeededOrFailed()
  