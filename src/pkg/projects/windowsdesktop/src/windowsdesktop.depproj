<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />

  <UsingTask TaskName="JoinItems" AssemblyFile="$(LocalBuildToolsTaskDir)core-setup.tasks.dll" />

  <ItemGroup>
    <PackageReference Include="$(MicrosoftDotNetWpfDncEngPackage)" Version="$(MicrosoftDotNetWpfDncEngPackageVersion)" />
    <PackageReference Include="$(MicrosoftDotNetWpfGitHubPackage)" Version="$(MicrosoftDotNetWpfGitHubPackageVersion)" />
    <PackageReference Include="Microsoft.Private.Winforms" Version="$(MicrosoftPrivateWinformsPackageVersion)" />

    <PackageReference Include="Microsoft.Win32.Registry" Version="$(SystemResourcesExtensionsPackageVersion)" />
    <PackageReference Include="Microsoft.Win32.SystemEvents" Version="$(SystemResourcesExtensionsPackageVersion)" />
    <PackageReference Include="System.CodeDom" Version="$(SystemResourcesExtensionsPackageVersion)" />
    <PackageReference Include="System.Configuration.ConfigurationManager" Version="$(SystemResourcesExtensionsPackageVersion)" />
    <PackageReference Include="System.Drawing.Common" Version="$(SystemResourcesExtensionsPackageVersion)" />
    <PackageReference Include="System.IO.Packaging" Version="$(SystemResourcesExtensionsPackageVersion)" />
    <PackageReference Include="System.Resources.Extensions" Version="$(SystemResourcesExtensionsPackageVersion)" />
    <PackageReference Include="System.Security.AccessControl" Version="$(SystemResourcesExtensionsPackageVersion)" />
    <PackageReference Include="System.Security.Cryptography.Cng" Version="$(SystemResourcesExtensionsPackageVersion)" />
    <PackageReference Include="System.Security.Cryptography.Pkcs" Version="$(SystemResourcesExtensionsPackageVersion)" />
    <PackageReference Include="System.Security.Cryptography.ProtectedData" Version="$(SystemResourcesExtensionsPackageVersion)" />
    <PackageReference Include="System.Security.Cryptography.Xml" Version="$(SystemResourcesExtensionsPackageVersion)" />
    <PackageReference Include="System.Security.Permissions" Version="$(SystemResourcesExtensionsPackageVersion)" />
    <PackageReference Include="System.Security.Principal.Windows" Version="$(SystemResourcesExtensionsPackageVersion)" />
    <PackageReference Include="System.Windows.Extensions" Version="$(SystemWindowsExtensionsPackageVersion)" />
  </ItemGroup>

  <ItemGroup>
    <RuntimeOnlyPackageReference Include="System.Diagnostics.EventLog" Version="$(SystemResourcesExtensionsPackageVersion)" />
    <RuntimeOnlyPackageReference Include="System.DirectoryServices" Version="$(SystemResourcesExtensionsPackageVersion)" />
    <RuntimeOnlyPackageReference Include="System.IO.FileSystem.AccessControl" Version="$(SystemResourcesExtensionsPackageVersion)" />

    <PackageReference Include="@(RuntimeOnlyPackageReference)" ExcludeAssets="Compile" />
  </ItemGroup>

  <!-- Pick up unconventional WPF package natives in lib\<rid>. -->
  <Target Name="GetLibNativeFilePackagePaths"
          BeforeTargets="GetFilesFromPackages"
          Condition="'$(NuGetRuntimeIdentifier)' != ''">
    <ItemGroup>
      <_lowercasePackageId
        Include="$([System.String]::new('%(PackageReference.Identity)').ToLowerInvariant())"
        NuGetPackageId="%(PackageReference.Identity)"
        Version="%(PackageReference.Version)" />

      <_packageNativeDir Include="@(_lowercasePackageId -> '$(PackagesDir)%(Identity)/%(Version)/lib/$(NuGetRuntimeIdentifier)/')" />

      <ReferenceCopyLocalPaths
        Include="%(_packageNativeDir.Identity)**/*.*"
        IsNative="true"
        NuGetPackageId="%(_packageNativeDir.NuGetPackageId)" />
    </ItemGroup>
  </Target>

  <!--
    Version.txt files aren't provided by some packages. However, dependency information is now in
    Version.Details.xml and BAR, so info file isn't necessary in the package. Stub the target.
  -->
  <Target Name="GetDependencyVersionFiles" />

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
</Project>
