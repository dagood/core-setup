<Project Sdk="Microsoft.NET.Sdk" InitialTargets="GetPackageReference" DefaultTargets="Restore;Publish">
  <!--
    This project lays out a shared framework, using the SDK targets.

    Inputs:
      SharedFrameworkName: Name of the shared framework, such as Microsoft.NETCore.App.
      SharedFrameworkPkgprojFile: Full path of the pkgproj that produces the framework package.
      SharedFrameworkLayoutDir: Directory to lay out <rid>/<id>/<version>/<files> of the shared fx.
      IntermediateOutputPath: Typical. Passed in to make sure intermediate files don't overlap.
      MSBuildProjectExtensionsPath: Tells the SDK to put restore intermediates in a specific place.
  -->

  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <NETCoreAppMaximumVersion>3.0</NETCoreAppMaximumVersion>
    <RuntimeIdentifier>$(PackageRID)</RuntimeIdentifier>
    <PackageId>unused</PackageId>

    <!-- Don't reference NETCore.App -->
    <DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences>
    <!-- Only Restore from our built packages -->
    <RestoreSources>$(PackageOutputPath)</RestoreSources>
    <RestoreConfigFile>$(ProjectDir)NuGet.config</RestoreConfigFile>
    <!-- Use repo-restored packages for platforms and targets dependencies -->
    <RestoreFallbackFolders>$(PackagesDir)</RestoreFallbackFolders>
    <DisableImplicitNuGetFallbackFolder>true</DisableImplicitNuGetFallbackFolder>
    <!-- Don't error due to lack of runtime-specific deps, we're referencing those directly -->
    <EnsureRuntimePackageDependencies>false</EnsureRuntimePackageDependencies>
    <!-- Use a project-local packages folder -->
    <RestorePackagesPath>$(IntermediateOutputPath)packages</RestorePackagesPath>
    <!-- Do not build or nor build in publish output or deps -->
    <NoBuild>true</NoBuild>
    <CopyBuildOutputToPublishDirectory>false</CopyBuildOutputToPublishDirectory>
    <CopyOutputSymbolsToPublishDirectory>false</CopyOutputSymbolsToPublishDirectory>
    <IncludeMainProjectInDepsFile>false</IncludeMainProjectInDepsFile>
  </PropertyGroup>

  <Target Name="GetPackageReference">
    <Error Condition="'$(SharedFrameworkName)' == ''" Text="'SharedFrameworkName' property not specified." />
    <Error Condition="'$(SharedFrameworkPkgprojFile)' == ''" Text="'SharedFrameworkPkgprojFile' property not specified." />

    <MSBuild
      Projects="$(SharedFrameworkPkgprojFile)"
      Targets="GetPackageIdentity"
      Properties="PackageTargetRuntime=$(PackageRID)"
      RemoveProperties="Configuration">
      <Output TaskParameter="TargetOutputs" ItemName="PackageReference" />
    </MSBuild>

    <PropertyGroup>
      <PublishDir>$(SharedFrameworkLayoutDir)%(PackageReference.Identity)/%(PackageReference.Version)/</PublishDir>
    </PropertyGroup>
  </Target>
  
  <Target Name="GenerateRuntimeConfig" BeforeTargets="Publish">
    <MakeDir Directories="$(PublishDir)" />
    
    <PropertyGroup>
      <_runtimeConfigContent>
      <![CDATA[
{
  "runtimeOptions": {
    "tfm": "$(TargetFramework)",
    "framework": {
      "name": "Microsoft.NETCore.App",
      "version": "$(MicrosoftNETCoreAppPackageVersion)"
    }
  }
}
      ]]>
      </_runtimeConfigContent>
    </PropertyGroup>
    
    <WriteLinesToFile
      File="$(PublishDir)$(SharedFrameworkName).runtimeconfig.json"
      Lines="$(_runtimeConfigContent)"
      Overwrite="true" />
  </Target>

  <Target Name="GenerateVersionFile"
          DependsOnTargets="GetPackageReference"
          BeforeTargets="Publish">
    <!-- Generate .version file -->
    <ItemGroup>
      <VersionLines Include="$(LatestCommit)" />
      <VersionLines Include="%(PackageReference.Version)" />
    </ItemGroup>

    <WriteLinesToFile
      File="$(PublishDir).version"
      Lines="@(VersionLines)"
      Overwrite="true" />
  </Target>
  
  <Target Name="CleanPackages" BeforeTargets="Clean">
    <RemoveDir Directories="$(PublishDir);$(RestorePackagesPath)" />
    <Delete Files="$(ProjectAssetsFile)" />
  </Target>

</Project>
