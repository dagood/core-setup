<Project>

  <!--
    Allow the caller to specify '/p:BuildGroup' to run only part of the build. This causes a subset
    of the projects to be built. Additional code elsewhere shortcuts project dependencies so
    building a later stage doesn't rebuild the earlier ones. If multiple stages are specified, they
    all run.

    The Installers group also handles '/p:InstallersPhaseTarget' to give the official build enough
    control to run extra steps between specific targets.
  -->
  <PropertyGroup>
    <BuildGroup Condition="'$(BuildGroup)' == ''">Binaries-Installers-Tests</BuildGroup>
  </PropertyGroup>

  <ItemGroup Condition="$(BuildGroup.Contains('Binaries'))">
    <ProjectToBuild Include="$(RepoRoot)src\corehost\build.proj" />
    <ProjectToBuild Include="$(RepoRoot)src\managed\**\*.csproj" />

    <!--
      Build pkgproj/depproj but not sfxproj. sfxproj requires pkgprojs to build their nupkgs first,
      before Restore, which doesn't seem supported by Arcade. The sfxproj projects run as
      dependencies of installers.proj, and are considered part of the Installers BuildGroup.
    -->
    <ProjectToBuild Include="$(RepoRoot)src\pkg\projects\**\*.pkgproj" />
    <ProjectToBuild Include="$(RepoRoot)src\pkg\projects\**\*.depproj" />
  </ItemGroup>

  <ItemGroup Condition="$(BuildGroup.Contains('Installers'))">
    <ProjectToBuild Include="$(RepoRoot)src\pkg\packaging\installers.proj" />
  </ItemGroup>

  <ItemGroup Condition="$(BuildGroup.Contains('Tests'))">
    <ProjectToBuild Include="$(RepoRoot)src\test\BundleTests\AppHost.Bundle.Tests\AppHost.Bundle.Tests.csproj" />
    <ProjectToBuild Include="$(RepoRoot)src\test\BundleTests\Microsoft.NET.HostModel.Bundle.Tests\Microsoft.NET.HostModel.Bundle.Tests.csproj" />
    <ProjectToBuild Include="$(RepoRoot)src\test\HostActivation.Tests\HostActivation.Tests.csproj" />
    <ProjectToBuild Include="$(RepoRoot)src\test\Microsoft.Extensions.DependencyModel.Tests\Microsoft.Extensions.DependencyModel.Tests.csproj" />
  </ItemGroup>

  <PropertyGroup>
    <RepoTasksDir>$(RepoRoot)tools-local\tasks\</RepoTasksDir>
    <RepoTasksOutputFile>$(ArtifactsObjDir)core-setup.tasks\$(Configuration)\build-semaphore.txt</RepoTasksOutputFile>
  </PropertyGroup>

  <ItemGroup>
    <RepoTasksSrc Include="$(RepoTasksDir)**\*.cs" />
  </ItemGroup>

  <!--
    Use this extensibility point to build custom tasks during Build.proj, before any restoring or
    building happens in the repo. These DLLs would ideally live in Arcade and be restored as tools,
    so the idea is building them here is somewhat equivalent.

    Also create the host RID props file so the main build can use it statically.

    Use synthetic inputs/outputs to avoid building it all the time. This should let devs build with
    MSBuild node reuse enabled (the Arcade default). If it were built every time, it would hit file
    locking issues vs. the persistent nodes that loaded the task DLL for the previous build. It
    isn't particularly accurate, but better than nothing.
  -->
  <Target Name="BuildRepoTasks"
          BeforeTargets="Execute"
          Inputs="@(RepoTasksSrc)"
          Outputs="$(RepoTasksOutputFile)">
    <MSBuild
      Projects="$(RepoTasksDir)core-setup.tasks.csproj"
      Properties="RepoRoot=$(RepoRoot)"
      Targets="
        Restore;
        Build;
        CreateHostMachineInfoFile"/>

    <WriteLinesToFile
      File="$(RepoTasksOutputFile)"
      Lines="$(RepoTasksOutputFile)"
      Overwrite="true" />
  </Target>

</Project>
